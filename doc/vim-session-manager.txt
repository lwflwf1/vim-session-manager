*vim-session-manager.txt*   session manager for Vim
*vim-session-manager*

================================================================================
CONTENTS                                          *vim-session-manager-contents*

1. Introduction                               |vim-session-manager-Introduction|
2. Installation                               |vim-session-manager-Installation|
3. Commands                                       |vim-session-manager-Commands|
4. Options                                         |vim-session-manager-Options|
5. StatusLine                                   |vim-session-manager-StatusLine|
6. License                                         |vim-session-manager-License|
7. Credits                                         |vim-session-manager-Credits|

================================================================================
INTRODUCTION                                  *vim-session-manager-Introduction*

vim-session-manager is a fast, lightweight, and easy-to-use session manager plugin.

- Navigate in a session list
- Save current session
- Add description to a session
- Load a session
- Rename a session
- Track current session
- Delete a session
- Close current session
- Record session history
- Automatically save current session when exiting Vim
- Automatically load last session when entering Vim

This plugin is based on vim's bulit-in `:mksession` command.

This plugin is inspired by obsession and vscode plugin Project Manager.

Compared to obsession, this plugin provides more functions.
Compared to vim-session, this plugin is easier to use and does not rely on other plugin.

================================================================================
INSTALLATION                                    *vim-session-manager-Installation*

vim-plug(https://github.com/junegunn/vim-plug)

    `Plug 'lwflwf1/vim-session-manager'`

dein(https://github.com/Shougo/dein.vim)

    `call dein#add('lwflwf1/vim-session-manager')`

================================================================================
COMMANDS                                            *vim-session-manager-Commands*

:SessionSave                                                        *:SessionSave*

    `:SessionSave [{name}:{description}]`

    Use this command to save current session.

    E.g.:
    `:SessionSave abc:this is abc`
    `:SessionSave cdf`
    `:SessionSave`

    The part before `:` is the session name, the part after `:` is the description.

    Omit `:` if you do not want to add a description.

    If you are already in a session and you use this command with a name, then
    the current session will be changed to that new name.

    You can use this command without arguments, and there are 3 circumstances:

    1. If you are already in a session, the current session will be saved.
    2. If you are not in a session and |g:session_default_session_enable| is set to 1,
    the current session will be saved as default_session.
    3. If you are not in a session and |g:session_default_session_enable| is set to 0,
    you must specify the name to save current session.

:SessionLoad                                                        *:SessionLoad*

    `:SessionLoad [{name}]`

    Use this command to load a session.

    {name} can be a session name or the previous session number.

    E.g.:
    `:SessionLoad abc`
    `:SessionLoad ~2`
    `:SessionLoad`

    Using this command with `~{number}` means loading the previous {number} session.

    Using this command without arguments to load the last session you used.

    If there is no last session and |g:session_default_session_enable| is set to 1,
    using this command without arguments will load the default_session.

    Note: 
    1. `:SessionLoad` is equivalent to `:SessionLoad ~1`
    2. Before loading into a new session, all unsaved changes will be saved
    and the old session will be saved automatically.
    3. Before loading into a new session, all buffers will be wipeouted if
    |g:session_clear_before_load| is set to 1.

:SessionList                                                        *:SessionList*
    
    `:SessionList`

    Use this command to open a session list.

    All sessions are listed in the session list, and you can navigate in it to
    enter a session or delete a session.

:SessionDelete                                                    *:SessionDelete*

    `:SessionDelete[!] [{name1} {name2} ...]`

    Use this command to delete a session.

    E.g.:
    `:SessionDelete abc def`
    `:SessionDelete!`
    `:SessionDelete`

    All sessions that you specified will be deleted.

    Use this command with bang `!` to delete all sessions.

    Use this command without arguments to delete current session.

:SessionRename                                                  *:SessionRename*

    `:SessionRename {old name} {new name}`
    
    Use this command to rename a session.

    E.g.:
    `:SessionRename abc def`

    Note: If you rename the current session, the current session will be
    changed to that new name.

:SessionClose                                                     *:SessionClose*

    `:SessionClose`

    Use this command to close current session.

    Note: This command will save all unsaved changes and wipeout all buffers
    if |g:session_clear_before_load| is set to 1.

================================================================================
OPTIONS                                              *vim-session-manager-Options*

g:session_autosave_enable                              *g:session_autosave_enable*

    Default: 1

    Whether to save current session when exiting vim.

g:session_autoload_enable                              *g:session_autoload_enable*

    Default: 0

    Whether to load last session you used when entering vim.

g:session_dir                                                     *g:session_dir*

    Default: vim: '~/.vim/session'
             neovim: stdpath('data').'/session'

    The session directory

g:session_track_current_session                 *g:session_track_current_session*

    Default: 0

    Whether to track current session

    If you set this to 1, then once event `BufEnter` is triggerd, the current
    session will be saved.

g:session_clear_before_load                          *g:session_clear_before_load*

    Default: 1

    Whether to wipeout all buffers before loading a session.

g:session_default_session_enable                *g:session_default_session_enable*

    Default: 1

    If you set this to 1, you don't need to pass {name} to `:SessionSave`
    and `:SessionLoad`.

g:session_max_history                                      *g:session_max_history*
    
    Default: 100

    Maximum number of session history records.

================================================================================
STATUSLINE                                        *vim-session-manager-StatusLine*

Use function *SessionStatusLine()* to display current session name in statusline.

If you are in a session, it returns the current session name, otherwise it
returns empty string.

================================================================================
LICENSE                                              *vim-session-manager-License*

MIT

================================================================================
CREDITS                                              *vim-session-manager-Credits*

Author: lwflwf1
Website: https://github.com/lwflwf1/vim-session-manager

vim:textwidth=80:tabstop=4:filetype=help
